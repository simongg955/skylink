
<style>


.puntuacion {

    color: #dc3545; /* Color del texto */
    padding: 0.25rem 0.5rem; /* Espaciado interno */
    border-radius: 50%; /* Borde redondeado */
    text-align: center; /* Alineación del texto */
    cursor: pointer; /* Cursor de apuntador */
    transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out; /* Transiciones suaves */
    display: inline-block; /* Mostrar como bloque en línea */
    margin-top: 100px ; /* Eliminar márgenes por defecto */

}

/* Estilos para diferentes rangos de puntuación */
.puntuacion.rojo {
  border: 1px solid #dc3545; /* Color del borde */

  color: 	#ebf2f6;
}

.puntuacion.amarillo {
  border: 1px solid yellow; /* Color del borde */

  color: 	#ebf2f6;
}

.puntuacion.verde {
  border: 1px solid green; /* Color del borde */
  
  color: #ebf2f6;
}
.puntuacion.verde:hover{
    background-color: #6abf69;
    color: black;
}
.puntuacion.rojo:hover{
    background-color: #ff6b6b;
    color: black;
}
.puntuacion.amarillo:hover{
  background-color: #ffd166;
    color: black;
}

.titulo{
    color: #ebf2f6;
    text-align: center;
}


img{
    float: left;
    margin-left: 200px; 
    margin-top: 30px;
    border-radius: 100%;
    -webkit-border-radius: 70%;
    -moz-border-radius: 70%;
    -ms-border-radius: 70%;
    -o-border-radius: 70%;
    height: 200px;
    object-fit: cover;
    /*Ajustalaimagenparallenarelespaciosindistorsión*/
}

p {
    margin-top: 75px;
}

.h1{
    color: #ebf2f6;
}
h1{
    color: rgb(70, 70, 238);
}

.objetos{
    color: rgb(70, 70, 238) ;
    margin-top: 30px;
}
.confeimg{
    margin-top: 150px;
}

a{
    text-decoration: none !important;
    color: #ebf2f6;
}
.editarButton{
    background-color: black;
    color: #ebf2f6;
    float: right;

}
.crearButton{
    background-color: black;
    color: #ebf2f6;
}
.editarButton:hover{
background-color: blue
}
.eliminarButton{
    background-color: black;
    color: #ebf2f6;
    float: right;

}
.eliminarButton:hover{
    background-color: red !important;
}
.descripcioninicio{
    color: #ebf2f6 ;
}
.duracioninicio{
    color: rgb(70, 70, 238) ;
}
.titulo_cursoinicio{
    color: #2a6e9e ;
}
.verdetalles{
    color: #144c7a ;
    text-decoration: underline !important;
}




.contenedorCursos{
      display: flex;
  justify-content: center;
  align-items: center;
}
@keyframes slideInFromLeft {
    0% {
        transform: translateX(-100%);
    }
    100% {
        transform: translateX(0);
    }
}


.animacion-curso.curso-visible {
    animation: slideInFromLeft 0.5s ease-out;
}

    #aplicarFiltro:hover{
        cursor: pointer;
    }
    #restablecerFiltro:hover{
        cursor: pointer;
    }



</style>
<body>    
<input type="text" id="tituloFiltro" placeholder="Escribe el titulo a buscar">
<button id="aplicarFiltro">Aplicar filtro</button>
<br>
<button id="restablecerFiltro" style="margin-top: 10px;">Restablecer busqueda</button>


    <div class="objetos">
        <div class="contenedorCursos">
            <button class="crearButton" id="crearButton"><a href="/crearcursos">crear</a></button>
        </div>
        
    </div>
{{#each querycursos}}
        <h4 class="puntuacion" style="float: right; margin-bottom: 5px;">{{puntuacion}}</h4>
<div class="animacion-curso curso-contenedor curso-oculto">
    <div class="confeimg">
        <p style="display: none;">{{id_cursos}}</p>
        <img src="{{imagen}}">
        <h1 class="titulo_cursoinicio"> {{titulo_curso}} </h1>
        <h4 class="descripcioninicio"> {{descripcion}} </h4>
        <h4 class="duracioninicio"> {{duracion}} </h4>
                <p> 
            <a href="/verdetallescurso/{{id_cursos}}" class="verdetalles">
                ver mas detalles
            </a>
        </p>
    </div>


    <div class="contenedorCursos">
        <button class="editarButton" id="editarButton"><a href="/editarcursos/{{id_cursos}}"><i class="fas fa-edit"></i></a></button>
        <button class="eliminarButton" id="eliminarButton" onclick="validarEliminar('{{id_cursos}}')" data-bs-original-title="Eliminar" ><i class="iconof fas fa-trash-alt" style="color: white;"></i></button>
        
    </div>
</div>
    <script>
//-----------------------------------------------------------------circulo segun la puntuacion del curso
        document.addEventListener("DOMContentLoaded", function() {
            const puntuacionElements = document.querySelectorAll(".puntuacion");

            puntuacionElements.forEach(puntuacionElement => {
                const puntuacion = parseInt(puntuacionElement.textContent);

                if (puntuacion >= 0 && puntuacion <= 45) {
                    puntuacionElement.classList.add("rojo");
                } else if (puntuacion >= 46 && puntuacion <= 85) {
                    puntuacionElement.classList.add("amarillo");
                } else if (puntuacion >= 86 && puntuacion <= 100) {
                    puntuacionElement.classList.add("verde");
                }
            });
        });
    </script>
    {{/each}}
<script>
// ----------------------------------------------------------------Función para confirmar si un usuario desea eliminar un registro
    function validarEliminar(id_cursos) {
        Swal.fire({
            title: '¿Estás seguro?',
            text: 'Se eliminará el curso seleccionado, ¿deseas continuar?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Sí, eliminar',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                axios.post('/eliminarcursos', {
                    id_cursos: id_cursos
                }).then(function (response) {
                    Swal.fire({
                        title: '¡Eliminado!',
                        text: response.data.mensaje,
                        icon: 'success'
                    }).then(() => {
                        window.location.href = '/cursos';
                    });
                }).catch(function (response) {
                    Swal.fire({
                        title: 'Error',
                        text: response.data.mensaje,
                        icon: 'error'
                    }).then(() => {
                        window.location.href = '/cursos';
                    });
                });
            }
        });
        }
//----------------------------------------------------------------animacion para cada vez que bajemos los cursos se vea de izquierda a derecha
document.addEventListener("DOMContentLoaded", function() {
    const cursosContenedores = document.querySelectorAll(".curso-contenedor");
    
    const observer = new IntersectionObserver(entries => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.remove("curso-oculto");
                entry.target.classList.add("curso-visible");
                observer.unobserve(entry.target);
            }
        });
    });

    cursosContenedores.forEach(curso => {
        observer.observe(curso);
    });
});
      
//---------------------------------------------------------------filtrar cursos por tipo y restablecer filtro

document.addEventListener("DOMContentLoaded", function() {
    const cursosContenedores = document.querySelectorAll(".curso-contenedor");
    const botonRestablecerFiltro = document.getElementById("restablecerFiltro");
    const tituloFiltro = document.getElementById("tituloFiltro");
    const botonAplicarFiltro = document.getElementById("aplicarFiltro");
    const filtroTituloGuardado = localStorage.getItem("filtroTitulo");
    const urlParams = new URLSearchParams(window.location.search);
    const filtroURL = urlParams.get("filtro");

    // Establecer el valor del filtro (de localStorage o de la URL)
    const filtroActual = filtroURL || filtroTituloGuardado || "";
    tituloFiltro.value = filtroActual;

    // Activar el evento de filtrado automáticamente
    if (filtroActual) {
        botonAplicarFiltro.click();
        
    }
     botonAplicarFiltro.addEventListener("click", aplicarFiltro);

    function aplicarFiltro() {
        const tituloFiltroValor = tituloFiltro.value.toLowerCase().trim();
        const letrasFiltro = [...new Set(tituloFiltroValor.split(''))]; // Obtener letras del filtro

        cursosContenedores.forEach(curso => {
            const tituloCurso = curso.querySelector(".titulo_cursoinicio").textContent.toLowerCase();
            const botonesContenedor = curso.querySelector(".contenedorCursos");
            const todasLetrasPresentes = letrasFiltro.every(letra => tituloCurso.includes(letra));

            if (tituloFiltroValor === "" || todasLetrasPresentes) {
                curso.style.display = "block";
                botonesContenedor.style.display = "flex";
            } else {
                curso.style.display = "none";
                botonesContenedor.style.display = "none";
            }
        });

        // Actualizar la URL para reflejar el filtro actual
        const url = new URL(window.location);
        url.searchParams.set("filtro", tituloFiltroValor);
        window.history.replaceState(null, null, url);

        // Guardar el valor del filtro en localStorage
        localStorage.setItem("filtroTitulo", tituloFiltroValor);
    }
    

    const observer = new IntersectionObserver(entries => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.remove("curso-oculto");
                entry.target.classList.add("curso-visible");
                observer.unobserve(entry.target);
            }
        });
    });

    cursosContenedores.forEach(curso => {
        observer.observe(curso);
    });

   botonRestablecerFiltro.addEventListener("click", function() {
    tituloFiltro.value = ""; // Limpiar el campo de filtro

    cursosContenedores.forEach(curso => {
        curso.style.display = "block"; // Mostrar todos los cursos
        const botonesContenedor = curso.querySelector(".contenedorCursos");
        botonesContenedor.style.display = "flex"; // Mostrar los botones de edición/eliminación
    });

    // Eliminar el parámetro "filtro" de la URL
    const url = new URL(window.location);
    url.searchParams.delete("filtro");
    window.history.replaceState(null, null, url);

    // Limpiar el filtro en localStorage
    localStorage.removeItem("filtroTitulo");
});
botonRestablecerFiltro.addEventListener("click", function() {
    tituloFiltro.value = ""; // Limpiar el campo de filtro
    location.reload();

    cursosContenedores.forEach(curso => {
        curso.style.display = "block"; // Mostrar todos los cursos
        const botonesContenedor = curso.querySelector(".contenedorCursos");
        botonesContenedor.style.display = "flex"; // Mostrar los botones de edición/eliminación
    });

    // Eliminar el parámetro "filtro" de la URL
    const url = new URL(window.location);
    url.searchParams.delete("filtro");
    window.history.replaceState(null, null, url);

    // Limpiar el filtro en localStorage
    localStorage.removeItem("filtroTitulo");
});

});
 

</script>


<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.15.5/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.15.5/dist/sweetalert2.min.js"></script>







                           
</body>




